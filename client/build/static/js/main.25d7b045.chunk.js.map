{"version":3,"sources":["context/auth.js","util/AuthRoute.js","util/graphql.js","components/TodoOptions/DeleteButton.js","components/TodoOptions/ToggleCompleteBtn.js","util/hooks.js","components/CreateUpdateForm.js","components/TodoOptions/EditTodoDialog.js","components/OwnerOptions.js","components/TodoItem.js","components/CreateTodo.js","components/TodoList.js","pages/Home.js","pages/Login.js","pages/Register.js","components/NavBar.js","App.js","ApolloProvider.js","index.js"],"names":["initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","Object","objectSpread","payload","AuthProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","assign","value","setItem","token","AuthRoute","_ref","Component","component","rest","objectWithoutProperties","useContext","react_router","render","to","FETCH_TODOS_QUERY","gql","_templateObject","DELETE_TODO_MUTATION","DeleteButton_templateObject","DeleteButton","id","callback","_useMutation","useMutation","update","proxy","data","readQuery","query","getTodos","filter","t","writeQuery","variables","todoId","deleteTodo","IconButton","aria-label","onClick","Delete_default","SWITCH_COMPLETE_MUTATION","ToggleCompleteBtn_templateObject","ToggleCompleteBtn","_ref$options","options","completed","refetch","_useState","useState","_useState2","isCompleted","setSwitch","switchComplete","FormControlLabel","control","Switch","checked","name","onChange","label","useForm","arguments","length","undefined","values","setValues","event","defineProperty","target","onSubmit","e","preventDefault","classList","add","onSwitch","CreateUpdateForm","close","_useForm","queryTodo","CREATE_TODO","UPDATE_TODO","result","createTodo","concat","toConsumableArray","title","description","className","Typography","variant","Input","placeholder","required","TextField","multiline","margin","FormControl","FormLabel","RadioGroup","priority","Radio","privateTodo","Button","size","style","maxWidth","disabled","CreateUpdateForm_templateObject","_templateObject2","EditTodoDialog","_ref$todo","todo","open","setOpen","handleClose","Fragment","marginRight","Icon","Dialog","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","OwnerOptions","toggleOptions","Grid","container","item","justify","alignItems","xs","TodoOptions_DeleteButton","TodoOptions_ToggleCompleteBtn","TodoItem","createdAt","modifiedAt","username","Container","Card","CardActionArea","CardContent","gutterBottom","color","moment","fromNow","CardActions","components_OwnerOptions","CreateTodo","Paper","padding","TodoList","todos","_useQuery","useQuery","loading","error","width","components_CreateTodo","CardHeader","textAlign","LinearProgress","message","map","key","components_TodoItem","Home","components_TodoList","LOGIN_USER","Login_templateObject","Login","context","errors","setErrors","_useState3","_useState4","connectionError","setConnectionError","_useState5","_useState6","loginUser","password","_","history","push","onError","err","graphQLErrors","extensions","exception","_useMutation2","general","InputLabel","htmlFor","FormHelperText","position","CircularProgress","top","marginTop","marginBottom","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","REGISTER_USER","Register_templateObject","Register","addUser","email","confirmPassword","register","useStyles","makeStyles","theme","root","flexGrow","menuButton","spacing","NavBar","classes","_useContext","pathName","window","location","pathname","path","substr","activeItem","setActiveItem","handleItemClick","anchorEl","setAnchorEl","phoneMenuClick","onSmallScreenOptions","edge","currentTarget","Menu_default","Menu_Menu","keepMounted","Boolean","MenuItem","Link","children","AppBar","Toolbar","App","react_router_dom","components_NavBar","exact","util_AuthRoute","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","cache","InMemoryCache","ApolloProvider","react_common_esm","src_App","ReactDOM","document","getElementById"],"mappings":"gTAGMA,EAAe,CACjBC,KAAM,MAGV,GAAIC,aAAaC,QAAQ,YAAa,CAClC,IAAMC,EAAeC,IAAUH,aAAaC,QAAQ,aAE7B,IAAnBC,EAAaE,IAAaC,KAAKC,MAC/BN,aAAaO,WAAW,YAExBT,EAAaC,KAAOG,EAI5B,IAAMM,EAAcC,wBAAc,CAC9BV,KAAM,KACNW,MAAO,SAAAC,KACPC,OAAQ,eAGZ,SAASC,EAAYC,EAAOC,GACxB,OAAQA,EAAOC,MACX,IAAK,QACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIf,KAAMgB,EAAOI,UAErB,IAAK,SACD,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIf,KAAM,OAEd,QACI,OAAOe,GAInB,SAASM,EAAaC,GAAO,IAAAC,EACCC,qBAAWV,EAAaf,GADzB0B,EAAAP,OAAAQ,EAAA,EAAAR,CAAAK,EAAA,GAClBR,EADkBU,EAAA,GACXE,EADWF,EAAA,GAgBzB,OACIG,EAAAC,EAAAC,cAACrB,EAAYsB,SAAbb,OAAAc,OAAA,CACIC,MAAO,CAACjC,KAAMe,EAAMf,KAAMW,MAflC,SAAeC,GACXX,aAAaiC,QAAQ,WAAYtB,EAASuB,OAC1CR,EAAS,CACLV,KAAM,QACNG,QAASR,KAWwBC,OAPzC,WACIZ,aAAaO,WAAW,YACxBmB,EAAS,CAACV,KAAM,cAMRK,ICzCDc,MAbf,SAAAC,GAAoD,IAArBC,EAAqBD,EAAhCE,UAAyBC,EAAOtB,OAAAuB,EAAA,EAAAvB,CAAAmB,EAAA,eACzCrC,EAAQ0C,qBAAWjC,GAAnBT,KAEP,OACI4B,EAAAC,EAAAC,cAACa,EAAA,EAADzB,OAAAc,OAAA,GACQQ,EADR,CAEII,OAAQ,SAAAtB,GAAK,OACTtB,EAAO4B,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUE,GAAG,MAAQjB,EAAAC,EAAAC,cAACQ,EAAchB,uZCVpD,IAAMwB,EAAoBC,IAAHC,gPCyB9B,IAAMC,EAAuBF,IAAHG,KAMXC,EAzBf,SAAAd,GAAsC,IAAfe,EAAef,EAAfe,GAAIC,EAAWhB,EAAXgB,SAAWC,EACbC,YAAYN,EAAsB,CACnDO,OADmD,SAC5CC,GACH,IAAMC,EAAOD,EAAME,UAAU,CACzBC,MAAOd,IAEXY,EAAKG,SAAWH,EAAKG,SAASC,OAAO,SAAAC,GAAC,OAAIA,EAAEX,KAAOA,IACnDK,EAAMO,WAAW,CAACJ,MAAOd,EAAmBY,SACxCL,GAAUA,KAElBY,UAAW,CAACC,OAAQd,KATjBe,EAD2BjD,OAAAQ,EAAA,EAAAR,CAAAoC,EAAA,MAYlC,OACI1B,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAYC,aAAW,SAASC,QAASH,GACrCvC,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,+TCSZ,IAAM2C,EAA2BzB,IAAH0B,KAUfC,EAnCf,SAAArC,GAAgE,IAAAsC,EAAAtC,EAApCuC,QAAUC,EAA0BF,EAA1BE,UAAWzB,EAAeuB,EAAfvB,GAAK0B,EAAUzC,EAAVyC,QAAUC,EAC3BC,mBAASH,GADkBI,EAAA/D,OAAAQ,EAAA,EAAAR,CAAA6D,EAAA,GACrDG,EADqDD,EAAA,GACxCE,EADwCF,EAAA,GAAA3B,EAQnCC,YAAYiB,EAA0B,CAC3DP,UAAW,CAACC,OAAQd,EAAIyB,WAAYK,GACpC1B,OAF2D,WAGvDsB,OAHDM,EARqDlE,OAAAQ,EAAA,EAAAR,CAAAoC,EAAA,MAe5D,OACI1B,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkBC,QAAS1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACvBC,QAASN,EACTO,KAAK,cACLC,SAhBR,WAEI,OADcP,GAAdD,GACOE,KAeHnD,MAAOiD,IACPS,MAAOT,EAAc,YAAc,iJCzBlCU,GAAU,SAACvC,GAAgC,IAAtBtD,EAAsB8F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAOd,EAExBC,mBAASjF,GAFekF,EAAA/D,OAAAQ,EAAA,EAAAR,CAAA6D,EAAA,GAE7CiB,EAF6Cf,EAAA,GAErCgB,EAFqChB,EAAA,GAkBpD,MAAO,CACHS,SAfa,SAACQ,GACdD,EAAU/E,OAAAC,EAAA,EAAAD,CAAA,GAAI8E,EAAL9E,OAAAiF,GAAA,EAAAjF,CAAA,GAAcgF,EAAME,OAAOX,KAAOS,EAAME,OAAOnE,UAexDoE,SAZa,SAAAC,GACbA,EAAEC,iBACFD,EAAEF,OAAOI,UAAUC,IAAI,iBACvBpD,KAUAqD,SAPa,SAAAR,GACbD,EAAU/E,OAAAC,EAAA,EAAAD,CAAA,GAAK8E,EAAN9E,OAAAiF,GAAA,EAAAjF,CAAA,GAAegF,EAAME,OAAOX,KAAOS,EAAME,OAAOZ,YAOzDQ,8zCCPO,SAASW,GAATtE,GAAuE,IAA5CuB,EAA4CvB,EAA5CuB,MAAO6B,EAAqCpD,EAArCoD,KAAM1F,EAA+BsC,EAA/BtC,aAAc6G,EAAiBvE,EAAjBuE,MAAO9B,EAAUzC,EAAVyC,QAAU+B,EACnCjB,GAqB/C,WACQgB,GACAA,IAEJ,OAAOE,KAzB+D/G,GAAnEiG,EAD2Ea,EAC3Eb,OAAQN,EADmEmB,EACnEnB,SAAUW,EADyDQ,EACzDR,SAAUK,EAD+CG,EAC/CH,SAD+CpD,EAE9DC,YAAsB,WAAVK,EAAqBmD,GAAcC,GAAa,CAC5E/C,UAAW+B,EACXxC,OAF4E,SAErEC,EAAOwD,GACV,IAAMvD,EAAOD,EAAME,UAAU,CACzBC,MAAOd,IAEN2C,EAGD/B,EAAKG,SAAL,CAAiBoD,EAAOvD,KAAKwD,YAA7BC,OAAAjG,OAAAkG,GAAA,EAAAlG,CAA4CwC,EAAKG,WAFjDiB,IAIJrB,EAAMO,WAAW,CACbJ,MAAOd,EACPY,SAEJsC,EAAOqB,MAAQ,GACfrB,EAAOsB,YAAc,MAhBtBR,EAF2E5F,OAAAQ,EAAA,EAAAR,CAAAoC,EAAA,MA6BlF,OACI1B,EAAAC,EAAAC,cAAA,QAAMuE,SAAUA,EAAUkB,UAAU,yBAChC3F,EAAAC,EAAAC,cAAA,OAAKyF,UAAU,uBACV9B,GAAO7D,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,KAAKlF,UAAU,MAAnC,eAGRX,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACIC,YAAY,QACZlC,KAAK,QACLxD,MAAO+D,EAAOqB,MACd3B,SAAUA,EACVkC,UAAQ,IAEZhG,EAAAC,EAAAC,cAAC+F,GAAA,EAAD,CACIlC,MAAM,cACNmC,WAAS,EACTC,OAAO,SACPtC,KAAK,cACLxD,MAAO+D,EAAOsB,YACd5B,SAAUA,KAGlB9D,EAAAC,EAAAC,cAAA,OAAKyF,UAAU,sBACX3F,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAazF,UAAU,YACnBX,EAAAC,EAAAC,cAACmG,GAAA,EAAD,CAAW1F,UAAU,UAArB,YACAX,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CACIX,UAAU,cACVlD,aAAW,WACXoB,KAAK,WACLxD,MAAO+D,EAAOmC,SACdzC,SAAUA,GAEV9D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkBpD,MAAM,MAAMqD,QAAS1D,EAAAC,EAAAC,cAACsG,GAAA,EAAD,MAAUzC,MAAM,QACvD/D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkBpD,MAAM,SAASqD,QAAS1D,EAAAC,EAAAC,cAACsG,GAAA,EAAD,MAAUzC,MAAM,WAC1D/D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkBpD,MAAM,OAAOqD,QAAS1D,EAAAC,EAAAC,cAACsG,GAAA,EAAD,MAAUzC,MAAM,WAGhE/D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkBC,QAAS1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACvBC,QAASQ,EAAOqC,YAChB5C,KAAK,cACLC,SAAUgB,EACVzE,MAAO+D,EAAOqC,cACd1C,MAAOK,EAAOqC,YAAc,UAAY,gBAC5CzG,EAAAC,EAAAC,cAACwG,GAAA,EAAD,CACIb,QAAQ,YACRxG,KAAK,SACLsH,KAAK,QACLC,MAAO,CAACC,SAAU,KAClBC,UAAW1C,EAAOqB,OAEjB5B,EAAO,SAAW,YAMvC,IAAMuB,GAAcjE,IAAH4F,MA6BX5B,GAAchE,IAAH6F,MC1HF,SAASC,GAATxG,GAA0F,IAAjEe,EAAiEf,EAAjEe,GAAiE0F,EAAAzG,EAA7D0G,KAAO1B,EAAsDyB,EAAtDzB,MAAOC,EAA+CwB,EAA/CxB,YAAae,EAAkCS,EAAlCT,YAAaF,EAAqBW,EAArBX,SAAWrD,EAAUzC,EAAVyC,QAAUC,EAC7EC,oBAAS,GADoEC,EAAA/D,OAAAQ,EAAA,EAAAR,CAAA6D,EAAA,GAC9FiE,EAD8F/D,EAAA,GACxFgE,EADwFhE,EAAA,GAE/FlF,EAAe,CACjBmE,OAAQd,EACRiE,QACAC,cACAe,cACAF,YAMJ,SAASe,IACLD,GAAQ,GAGZ,OACIrH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsH,SAAA,KACIvH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAYC,aAAW,SAASmE,MAAO,CAACY,YAAa,IAAK9E,QAVlE,WACI2E,GAAQ,KAUArH,EAAAC,EAAAC,cAACuH,GAAA,EAAD,mBAEJzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CACIN,KAAMA,EACNO,QAASL,EACTM,kBAAgB,oBAChBf,SAAS,KACTgB,WAAW,GAEX7H,EAAAC,EAAAC,cAAC4H,GAAA,EAAD,CAAatG,GAAG,qBAAhB,eACAxB,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,KACI/H,EAAAC,EAAAC,cAAC6E,GAAD,CACI/C,MAAM,SACN6B,MAAM,EACN1F,aAAcA,EACd6G,MAAOsC,EACPpE,QAASA,OCvBlB8E,OAff,SAAAvH,GAAuC,IAAhB0G,EAAgB1G,EAAhB0G,KAAMjE,EAAUzC,EAAVyC,QAClBD,EAAiBkE,EAAjBlE,UAAWzB,EAAM2F,EAAN3F,GACZyG,EAAgB,CACpBhF,YACAzB,MAEF,OACIxB,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,QAAQ,aAAaC,WAAW,SAASC,GAAI,IAC9DvI,EAAAC,EAAAC,cAACsI,EAAD,CAAchH,GAAIA,IAClBxB,EAAAC,EAAAC,cAAC+G,GAAD,CAAgBzF,GAAIA,EAAI2F,KAAMA,EAAMjE,QAASA,IAC7ClD,EAAAC,EAAAC,cAACuI,EAAD,CAAmBzF,QAASiF,EAAe/E,QAASA,MCqDjDwF,OAvDf,SAAAjI,GAAmC,IAAhB0G,EAAgB1G,EAAhB0G,KAAMjE,EAAUzC,EAAVyC,QACd9E,EAAQ0C,qBAAWjC,GAAnBT,KAEHsH,EAQAyB,EARAzB,YACAD,EAOA0B,EAPA1B,MACAxC,EAMAkE,EANAlE,UACA0F,EAKAxB,EALAwB,UACAC,EAIAzB,EAJAyB,WACAC,EAGA1B,EAHA0B,SACAtC,EAEAY,EAFAZ,SACAE,EACAU,EADAV,YAEJ,UAASA,GAAgBrI,GAAQqI,GAAeoC,IAAazK,EAAKyK,WAC9D7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAWjC,SAAS,MAChB7G,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAMnC,MAAO,CAACT,OAAQ,WAClBnG,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACIjJ,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,KAAKlF,UAAU,MAC9B8E,GAELzF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,KAAKlF,UAAU,MAAnC,eACiBkI,GAEjB7I,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,YAAYqD,cAAY,EAACC,MAAM,gBAAgBxI,UAAU,KACxEyI,IAAOT,GAAWU,WAEtBT,IAAeD,GACZ3I,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,YAAYqD,cAAY,EAACC,MAAM,gBAAgBxI,UAAU,KAA7E,gBACkByI,IAAOR,GAAYS,WAEzCrJ,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,YAAYsD,MAAM,gBAAgBxI,UAAU,KAC3D+E,EAAc,iBAAmBA,EAAc,kBAEpD1F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,gBACa3C,EAAYjD,EAAAC,EAAAC,cAAA,QAAM0G,MAAO,CAACuC,MAAO,UAArB,aACrBnJ,EAAAC,EAAAC,cAAA,QAAM0G,MAAO,CAACuC,MAAO,QAArB,gBAEJnJ,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,kBACc5F,EAAAC,EAAAC,cAAA,QAAM0G,MAAO,CACvBuC,MAAoB,QAAb5C,EAAqB,QACT,WAAbA,EAAwB,SAAW,QACzCA,SAIXnI,GAAQA,EAAKyK,WAAaA,IACvB7I,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,KACItJ,EAAAC,EAAAC,cAACqJ,GAAD,CAAcpC,KAAMA,EAAMjE,QAASA,kBCrC5CsG,OAhBf,WAQI,QAPe1I,qBAAWjC,GAAnBT,MAQH4B,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAO7C,MAAO,CAACT,OAAQ,GAAIuD,QAAS,KAChC1J,EAAAC,EAAAC,cAAC6E,GAAD,CAAkB/C,MAAM,SAAS6B,KAAK,cAAc1F,aARvC,CACjBsH,MAAO,GACPC,YAAa,GACbe,aAAa,EACbF,SAAU,WCkCHoD,OAtCf,WAAoB,IAEZC,EAFYC,EACwBC,YAAS5I,GAA1C6I,EADSF,EACTE,QAASjI,EADA+H,EACA/H,KAAMoB,EADN2G,EACM3G,QAAS8G,EADfH,EACeG,MAK/B,OAHKA,IACDJ,EAAQ9H,EAAKG,UAGbjC,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAMnC,MAAO,CAACqD,MAAO,OAAQpD,SAAU,IAAMV,OAAQ,KACjDnG,EAAAC,EAAAC,cAACgK,GAAD,MACAlK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CACI1E,MAAM,eACNmB,MAAO,CAACwD,UAAW,UACnBzE,UAAU,gBAEboE,GAAWC,EACRhK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsH,SAAA,KACIvH,EAAAC,EAAAC,cAACmK,EAAA,EAAD,QACCL,GAAQhK,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CACLC,QAAQ,KACRlF,UAAU,KACViG,MAAO,CAACwD,UAAW,WAElBJ,EAAMM,UAGdtK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsH,SAAA,KACIqC,GAASA,EAAMW,IAAI,SAAApD,GAAI,OACpBnH,EAAAC,EAAAC,cAAA,OAAKsK,IAAKrD,EAAK3F,IACXxB,EAAAC,EAAAC,cAACuK,GAAD,CAAUtD,KAAMA,EAAMjE,QAASA,UC1B5CwH,OARf,WACI,OACI1K,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,QAAQ,SAASC,WAAW,SAASC,GAAI,IAC1DvI,EAAAC,EAAAC,cAACyK,GAAD,4WCkHZ,IAAMC,GAAazJ,IAAH0J,MAaDC,GArHf,SAAepL,GACX,IAAMqL,EAAUjK,qBAAWjC,GADTsE,EAEUC,mBAAS,IAFnBC,EAAA/D,OAAAQ,EAAA,EAAAR,CAAA6D,EAAA,GAEX6H,EAFW3H,EAAA,GAEH4H,EAFG5H,EAAA,GAAA6H,EAG4B9H,mBAAS,IAHrC+H,EAAA7L,OAAAQ,EAAA,EAAAR,CAAA4L,EAAA,GAGXE,EAHWD,EAAA,GAGME,EAHNF,EAAA,GAAAG,EAIMlI,oBAAS,GAJfmI,EAAAjM,OAAAQ,EAAA,EAAAR,CAAAgM,EAAA,GAIXlE,EAJWmE,EAAA,GAILlE,EAJKkE,EAAA,GAAAtG,EAKmBjB,GAsBrC,WACI,OAAOwH,KAvBqD,CAC5D3C,SAAU,GACV4C,SAAU,KAFP3H,EALWmB,EAKXnB,SAAUW,EALCQ,EAKDR,SAAUL,EALTa,EAKSb,OALT1C,EAUaC,YAAYiJ,GAAY,CACnDhJ,OADmD,SAC5C8J,EAD4CjL,GACd,IAAZzB,EAAYyB,EAA1BqB,KAAO/C,MACdgM,EAAQhM,MAAMC,GACdU,EAAMiM,QAAQC,KAAK,MAEvBC,QALmD,SAK3CC,GACAA,EAAIC,cAAc,GAClBd,EAAUa,EAAIC,cAAc,GAAGC,WAAWC,UAAUjB,SAGpDK,EAAmBS,EAAIxB,SACvBjD,GAAQ,KAGhBhF,UAAW+B,IAxBG8H,EAAA5M,OAAAQ,EAAA,EAAAR,CAAAoC,EAAA,GAUX8J,EAVWU,EAAA,GAUCnC,EAVDmC,EAAA,GAUCnC,QAoBnB,OACI/J,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,QAAQ,SAASC,WAAW,SAASC,GAAI,IAC1DvI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAMnC,MAAO,CAACT,OAAQ,GAAI8D,MAAO,OAAQpD,SAAU,UAC/C7G,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACIjJ,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,KAAKlF,UAAU,KAAKuI,cAAY,GAApD,WAGAlJ,EAAAC,EAAAC,cAAA,QAAMuE,SAAUA,EAAUkB,UAAU,eAChC3F,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACI4D,SAAUgB,EAAOnC,WAAYmC,EAAOmB,SACpCvF,MAAO,CAACqD,MAAO,SAEfjK,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAYC,QAAQ,mBAApB,YACArM,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACIjC,KAAK,WACLxD,MAAO+D,EAAOyE,SACd/E,SAAUA,EACVzE,KAAK,OACL0G,YAAY,gBAEhB/F,EAAAC,EAAAC,cAACoM,GAAA,EAAD,KAAiBtB,EAAOnC,UAAYmC,EAAOmB,UAE/CnM,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACI4D,SAAUgB,EAAOS,WAAYT,EAAOmB,SACpCvF,MAAO,CAACqD,MAAO,OAAQ9D,OAAQ,WAE/BnG,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAYC,QAAQ,mBAApB,YACArM,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACIjC,KAAK,WACLxD,MAAO+D,EAAOqH,SACd3H,SAAUA,EACVzE,KAAK,WACL0G,YAAY,gBAEhB/F,EAAAC,EAAAC,cAACoM,GAAA,EAAD,KAAiBtB,EAAOS,WAE5BzL,EAAAC,EAAAC,cAAA,OAAK0G,MAAO,CAAC2F,SAAU,aACnBvM,EAAAC,EAAAC,cAACwG,GAAA,EAAD,CACIb,QAAQ,YACRsD,MAAM,UACNvC,MAAO,CAACT,OAAQ,GAChB9G,KAAK,SACLyH,SAAUiD,GALd,WAQKA,GACG/J,EAAAC,EAAAC,cAACsM,GAAA,EAAD,CAAkB7F,KAAM,GACNC,MAAO,CACHuC,MAAO,QACPoD,SAAU,WACVE,IAAK,MACLC,WAAY,GACZC,cAAe,OAI7C3M,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB3F,KAAMA,EACN4F,iBAAkB,IAClBrF,QAAS,kBAAMN,GAAQ,IACvBiD,QAAStK,EAAAC,EAAAC,cAAA,YAAOkL,khBCyChD,IAAM6B,GAAgB9L,IAAH+L,MAmBJC,GA1Jf,SAAkBzN,GACd,IAAMqL,EAAUjK,qBAAWjC,GADNsE,EAEOC,mBAAS,IAFhBC,EAAA/D,OAAAQ,EAAA,EAAAR,CAAA6D,EAAA,GAEd6H,EAFc3H,EAAA,GAEN4H,EAFM5H,EAAA,GAAA6H,EAGyB9H,mBAAS,IAHlC+H,EAAA7L,OAAAQ,EAAA,EAAAR,CAAA4L,EAAA,GAGdE,EAHcD,EAAA,GAGGE,EAHHF,EAAA,GAAAG,EAIGlI,oBAAS,GAJZmI,EAAAjM,OAAAQ,EAAA,EAAAR,CAAAgM,EAAA,GAIdlE,EAJcmE,EAAA,GAIRlE,EAJQkE,EAAA,GAAAtG,EAMgBjB,GAuBrC,WACI,OAAOoJ,KAxBgD,CACvDvE,SAAU,GACVwE,MAAO,GACP5B,SAAU,GACV6B,gBAAiB,KAJdxJ,EANcmB,EAMdnB,SAAUW,EANIQ,EAMJR,SAAUL,EANNa,EAMMb,OANN1C,EAaQC,YAAYsL,GAAe,CACpDrL,OADoD,SAC7C8J,EAD6CjL,GACZ,IAAZzB,EAAYyB,EAA7BqB,KAAOyL,SACdxC,EAAQhM,MAAMC,GACdU,EAAMiM,QAAQC,KAAK,MAEvBC,QALoD,SAK5CC,GACCA,EAAIxB,SAGLe,EAAmBS,EAAIxB,SACvBjD,GAAQ,IAHR4D,EAAUa,EAAIC,cAAc,GAAGC,WAAWC,UAAUjB,SAM5D3I,UAAW+B,IA1BM8H,EAAA5M,OAAAQ,EAAA,EAAAR,CAAAoC,EAAA,GAad0L,EAbclB,EAAA,GAaJnC,EAbImC,EAAA,GAaJnC,QAoBjB,OACI/J,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,QAAQ,SAASC,WAAW,SAASC,GAAI,IAC1DvI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAMnC,MAAO,CAACT,OAAQ,GAAI8D,MAAO,OAAQpD,SAAU,UAC/C7G,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACIjJ,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAYC,QAAQ,KAAKlF,UAAU,KAAKuI,cAAY,GAApD,YAGAlJ,EAAAC,EAAAC,cAAA,QAAMuE,SAAUA,EAAUkB,UAAU,eAChC3F,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACI4D,SAAUgB,EAAOnC,WAAYmC,EAAOmB,SACpCvF,MAAO,CAACqD,MAAO,SAEfjK,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAYC,QAAQ,mBAApB,YACArM,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACIjC,KAAK,WACLxD,MAAO+D,EAAOyE,SACd/E,SAAUA,EACVzE,KAAK,OACL0G,YAAY,gBAEhB/F,EAAAC,EAAAC,cAACoM,GAAA,EAAD,KAAiBtB,EAAOnC,UAAYmC,EAAOmB,UAE/CnM,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACI4D,SAAUgB,EAAOqC,QAASrC,EAAOmB,SACjCvF,MAAO,CAACqD,MAAO,SAEfjK,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAYC,QAAQ,mBAApB,SACArM,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACIjC,KAAK,QACLxD,MAAO+D,EAAOiJ,MACdvJ,SAAUA,EACVzE,KAAK,QACL0G,YAAY,aAEhB/F,EAAAC,EAAAC,cAACoM,GAAA,EAAD,KAAiBtB,EAAOqC,QAE5BrN,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACI4D,SAAUgB,EAAOS,WAAYT,EAAOmB,SACpCvF,MAAO,CAACqD,MAAO,OAAQ9D,OAAQ,WAE/BnG,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAYC,QAAQ,mBAApB,YACArM,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACIjC,KAAK,WACLxD,MAAO+D,EAAOqH,SACd3H,SAAUA,EACVzE,KAAK,WACL0G,YAAY,gBAEhB/F,EAAAC,EAAAC,cAACoM,GAAA,EAAD,KAAiBtB,EAAOS,WAE5BzL,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACI4D,SAAUgB,EAAOsC,kBAAmBtC,EAAOmB,SAC3CvF,MAAO,CAACqD,MAAO,OAAQ9D,OAAQ,WAE/BnG,EAAAC,EAAAC,cAACkM,GAAA,EAAD,CAAYC,QAAQ,mBAApB,oBACArM,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACIjC,KAAK,kBACLxD,MAAO+D,EAAOkJ,gBACdxJ,SAAUA,EACVzE,KAAK,WACL0G,YAAY,wBAEhB/F,EAAAC,EAAAC,cAACoM,GAAA,EAAD,KAAiBtB,EAAOsC,kBAE5BtN,EAAAC,EAAAC,cAAA,OAAK0G,MAAO,CAAC2F,SAAU,aACnBvM,EAAAC,EAAAC,cAACwG,GAAA,EAAD,CACIb,QAAQ,YACRsD,MAAM,UACNvC,MAAO,CAACT,OAAQ,GAChB9G,KAAK,SACLyH,SAAUiD,GALd,aAQKA,GACG/J,EAAAC,EAAAC,cAACsM,GAAA,EAAD,CAAkB7F,KAAM,GACNC,MAAO,CACHuC,MAAO,QACPoD,SAAU,WACVE,IAAK,MACLC,WAAY,GACZC,cAAe,OAI7C3M,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB3F,KAAMA,EACN4F,iBAAkB,IAClBrF,QAAS,kBAAMN,GAAQ,IACvBiD,QAAStK,EAAAC,EAAAC,cAAA,YAAOkL,kFCjI1CoC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRrG,YAAakG,EAAMI,QAAQ,IAE/BrI,MAAO,CACHmI,SAAU,MA6GHG,OAzGf,WACI,IAAMC,EAAUR,KADFS,EAESnN,qBAAWjC,GAA3BT,EAFO6P,EAEP7P,KAAMa,EAFCgP,EAEDhP,OACPiP,EAAWC,OAAOC,SAASC,SAC3BC,EAAoB,MAAbJ,EAAmB,OAASA,EAASK,OAAO,GAJ3CpL,EAKsBC,mBAASkL,GAL/BjL,EAAA/D,OAAAQ,EAAA,EAAAR,CAAA6D,EAAA,GAKPqL,EALOnL,EAAA,GAKKoL,EALLpL,EAAA,GAMRqL,EAAkB,SAAC7K,GAAD,OAAU4K,EAAc5K,IANlCqH,EAQkB9H,mBAAS,MAR3B+H,EAAA7L,OAAAQ,EAAA,EAAAR,CAAA4L,EAAA,GAQPyD,EAROxD,EAAA,GAQGyD,EARHzD,EAAA,GAcd,SAAS7D,IACLsH,EAAY,MAGhB,SAASC,EAAezG,GACP,WAATA,GACAsG,EAAgBtG,GAChBd,MAEArI,IACAqI,KAIR,IAAMwH,EACF9O,EAAAC,EAAAC,cAAA,OAAKyF,UAAU,cACX3F,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAYuM,KAAK,QAAQpJ,UAAWqI,EAAQH,WAAY1E,MAAM,UAAU1G,aAAW,OACvEC,QArBpB,SAAqB4B,GACjBsK,EAAYtK,EAAM0K,iBAqBVhP,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,OAEF7B,EAcY4B,EAAAC,EAAAC,cAACgP,GAAA,EAAD,CACNP,SAAUA,EACVQ,aAAW,EACX/H,KAAMgI,QAAQT,GACdhH,QAASL,GAETtH,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAU3M,QAAS,kBAAMmM,EAAe,YAAxC,WAnBJ7O,EAAAC,EAAAC,cAACgP,GAAA,EAAD,CACIP,SAAUA,EACVQ,aAAW,EACX/H,KAAMgI,QAAQT,GACdhH,QAASL,GAETtH,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAU3M,QAAS,kBAAMmM,EAAe,UAC9BlO,UAAW2O,IACXrO,GAAG,UAFb,SAGAjB,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CAAU3M,QAAS,kBAAMmM,EAAe,aAC9BlO,UAAW2O,IACXrO,GAAG,aAFb,cAcVsO,EAAYnR,EAoBd4B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKyF,UAAU,eACX3F,EAAAC,EAAAC,cAACwG,GAAA,EAAD,CACIhE,QAASzD,EACTkK,MAAM,WAFV,WAKH2F,GA1BL9O,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKyF,UAAU,eACX3F,EAAAC,EAAAC,cAACwG,GAAA,EAAD,CACIb,QAAwB,UAAf2I,EAAyB,WAAa,OAC/C9L,QAAS,kBAAMgM,EAAgB,UAC/B/N,UAAW2O,IACXrO,GAAG,SACHkI,MAAM,WALV,SAOAnJ,EAAAC,EAAAC,cAACwG,GAAA,EAAD,CACIb,QAAwB,aAAf2I,EAA4B,WAAa,OAClD9L,QAAS,kBAAMgM,EAAgB,aAC/B/N,UAAW2O,IACXrO,GAAG,YACHkI,MAAM,WALV,aAQH2F,GAWT,OACI9O,EAAAC,EAAAC,cAAA,OAAKyF,UAAWqI,EAAQL,MACpB3N,EAAAC,EAAAC,cAACsP,GAAA,EAAD,CAAQjD,SAAS,UACbvM,EAAAC,EAAAC,cAACuP,GAAA,EAAD,KACIzP,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CACIlD,QAAS,kBAAMgM,EAAgB,SAC/B/N,UAAW2O,IAAMrO,GAAG,IACpB4E,QAAQ,KACRF,UAAWqI,EAAQvI,OAJvB,kBAOC8J,MCjGNG,OAbf,WACI,OACI1P,EAAAC,EAAAC,cAACT,EAAD,KACIO,EAAAC,EAAAC,cAACyP,EAAA,EAAD,KACI3P,EAAAC,EAAAC,cAAC0P,GAAD,MACA5P,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAO8O,OAAK,EAACvB,KAAK,IAAI3N,UAAW+J,KACjC1K,EAAAC,EAAAC,cAAC4P,EAAD,CAAWD,OAAK,EAACvB,KAAK,SAAS3N,UAAWmK,KAC1C9K,EAAAC,EAAAC,cAAC4P,EAAD,CAAWD,OAAK,EAACvB,KAAK,YAAY3N,UAAWwM,QCZvD4C,GAAWC,YAAe,CAC5BC,IAAK,0BAGHC,GAAWC,YAAW,WACxB,IAAM5P,EAAQlC,aAAaC,QAAQ,YACnC,MAAO,CACH8R,QAAS,CACLC,cAAe9P,EAAK,UAAAgF,OAAahF,GAAU,OAKjD+P,GAAS,IAAIC,IAAa,CAC5BC,KAAMN,GAAS3K,OAAOwK,IACtBU,MAAO,IAAIC,MAIXC,GAAA3Q,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,CAAgBN,OAAQA,IACpBtQ,EAAAC,EAAAC,cAAC2Q,GAAD,OC1BRC,IAAS9P,OAAO2P,GAAgBI,SAASC,eAAe","file":"static/js/main.25d7b045.chunk.js","sourcesContent":["import React, {useReducer, createContext} from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n    user: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n    const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n    if (decodedToken.exp * 1000 < Date.now()) {\n        localStorage.removeItem('jwtToken')\n    } else {\n        initialState.user = decodedToken;\n    }\n}\n\nconst AuthContext = createContext({\n    user: null,\n    login: userData => {},\n    logout: () => {}\n});\n\nfunction authReducer(state, action) {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                user: action.payload\n            };\n        case 'LOGOUT':\n            return {\n                ...state,\n                user: null\n            };\n        default:\n            return state;\n    }\n}\n\nfunction AuthProvider(props) {\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    function login(userData) {\n        localStorage.setItem(\"jwtToken\", userData.token);\n        dispatch({\n            type: 'LOGIN',\n            payload: userData\n        })\n    }\n\n    function logout() {\n        localStorage.removeItem(\"jwtToken\");\n        dispatch({type: 'LOGOUT'});\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{user: state.user, login, logout}}\n            {...props}\n        />\n    )\n}\n\nexport {AuthContext, AuthProvider};","import React, {useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nimport {AuthContext} from \"../context/auth\";\n\nfunction AuthRoute({component: Component, ...rest}) {\n    const {user} = useContext(AuthContext);\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                user ? <Redirect to=\"/\"/> : <Component {...props}/>\n            }\n        />\n    )\n}\n\nexport default AuthRoute;","import gql from \"graphql-tag\";\n\nexport const FETCH_TODOS_QUERY = gql`\n    {\n        getTodos{\n            id,\n            description,\n            title,\n            completed,\n            createdAt,\n            modifiedAt,\n            username,\n            priority,\n            privateTodo\n        }\n    }\n`;","import React from 'react';\nimport gql from \"graphql-tag\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {FETCH_TODOS_QUERY} from \"../../util/graphql\";\n\nfunction DeleteButton({id, callback}) {\n    const [deleteTodo] = useMutation(DELETE_TODO_MUTATION, {\n        update(proxy) {\n            const data = proxy.readQuery({\n                query: FETCH_TODOS_QUERY\n            });\n            data.getTodos = data.getTodos.filter(t => t.id !== id);\n            proxy.writeQuery({query: FETCH_TODOS_QUERY, data});\n            if (callback) callback();\n        },\n        variables: {todoId: id}\n    });\n    return (\n        <IconButton aria-label=\"Delete\" onClick={deleteTodo}>\n            <DeleteIcon/>\n        </IconButton>\n    )\n}\n\nconst DELETE_TODO_MUTATION = gql`\n    mutation deleteTodo($todoId: ID!){\n        deleteTodo(todoId: $todoId)\n    }\n`;\n\nexport default DeleteButton;","import React, {useState} from 'react';\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nfunction ToggleCompleteBtn({options: {completed, id}, refetch}) {\n    const [isCompleted, setSwitch] = useState(completed);\n\n    function setComplete() {\n        isCompleted ? setSwitch(false) : setSwitch(true);\n        return switchComplete();\n    }\n\n    const [switchComplete] = useMutation(SWITCH_COMPLETE_MUTATION, {\n        variables: {todoId: id, completed: !isCompleted},\n        update() {\n            refetch();\n        }\n    });\n\n    return (\n        <FormControlLabel control={<Switch\n            checked={isCompleted}\n            name=\"privateTodo\"\n            onChange={setComplete}\n            value={isCompleted}\n        />} label={isCompleted ? 'Completed' : \"Incompleted\"}/>\n    );\n}\n\nconst SWITCH_COMPLETE_MUTATION = gql`\n    mutation switchCompleteTodo($todoId: ID!, $completed: Boolean!){\n        switchCompleteTodo(todoId: $todoId, completed: $completed){\n            id,\n            completed,\n            modifiedAt\n        }\n    }\n`;\n\nexport default ToggleCompleteBtn;","import { useState } from 'react';\n\nexport const useForm = (callback, initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const onChange = (event) => {\n        setValues({...values, [event.target.name]: event.target.value});\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        e.target.classList.add(\"was-validated\");\n        callback();\n    };\n\n    const onSwitch = event => {\n        setValues({ ...values, [event.target.name]: event.target.checked });\n    };\n\n    return {\n        onChange,\n        onSubmit,\n        onSwitch,\n        values\n    }\n};","import React from 'react';\nimport Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from \"@material-ui/core/Button\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {useForm} from \"../util/hooks\";\nimport {FETCH_TODOS_QUERY} from \"../util/graphql\";\n\nexport default function CreateUpdateForm({query, name, initialState, close, refetch}) {\n    const {values, onChange, onSubmit, onSwitch} = useForm(queryTodoCallback, initialState);\n    const [queryTodo] = useMutation(query === 'CREATE' ? CREATE_TODO : UPDATE_TODO, {\n        variables: values,\n        update(proxy, result) {\n            const data = proxy.readQuery({\n                query: FETCH_TODOS_QUERY\n            });\n            if (!name) {\n                refetch();\n            } else {\n                data.getTodos = [result.data.createTodo, ...data.getTodos];\n            }\n            proxy.writeQuery({\n                query: FETCH_TODOS_QUERY,\n                data\n            });\n            values.title = '';\n            values.description = '';\n        }\n    });\n\n    function queryTodoCallback() {\n        if (close) {\n            close();\n        }\n        return queryTodo();\n    }\n\n    return (\n        <form onSubmit={onSubmit} className='create-todo-container'>\n            <div className=\"create-todo-first\">\n                {name ? <Typography variant=\"h5\" component=\"h2\">\n                    Create Todo\n                </Typography> : false}\n                <Input\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    value={values.title}\n                    onChange={onChange}\n                    required\n                />\n                <TextField\n                    label=\"Description\"\n                    multiline\n                    margin=\"normal\"\n                    name=\"description\"\n                    value={values.description}\n                    onChange={onChange}\n                />\n            </div>\n            <div className=\"create-todo-second\">\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Priority</FormLabel>\n                    <RadioGroup\n                        className=\"radio-group\"\n                        aria-label=\"Priority\"\n                        name=\"priority\"\n                        value={values.priority}\n                        onChange={onChange}\n                    >\n                        <FormControlLabel value=\"Low\" control={<Radio/>} label=\"Low\"/>\n                        <FormControlLabel value=\"Medium\" control={<Radio/>} label=\"Medium\"/>\n                        <FormControlLabel value=\"High\" control={<Radio/>} label=\"High\"/>\n                    </RadioGroup>\n                </FormControl>\n                <FormControlLabel control={<Switch\n                    checked={values.privateTodo}\n                    name=\"privateTodo\"\n                    onChange={onSwitch}\n                    value={values.privateTodo}\n                />} label={values.privateTodo ? 'Private' : \"Not private\"}/>\n                <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    size=\"small\"\n                    style={{maxWidth: 150}}\n                    disabled={!values.title}\n                >\n                    {name ? 'Create' : 'Update'}\n                </Button>\n            </div>\n        </form>\n    )\n}\nconst UPDATE_TODO = gql`\n    mutation UpdateTodo(\n        $todoId: ID!\n        $title: String!\n        $description: String\n        $completed: Boolean\n        $priority: String\n        $privateTodo: Boolean){\n        updateTodo(\n            todoId: $todoId\n            title: $title\n            description: $description\n            completed: $completed\n            priority: $priority\n            privateTodo: $privateTodo\n        ){\n            id\n            title\n            description\n            completed\n            createdAt\n            modifiedAt\n            username\n            priority\n            privateTodo\n        }\n    }\n`;\n\nconst CREATE_TODO = gql`\n    mutation CreateTodo(\n        $title: String!\n        $description: String\n        $priority: String\n        $privateTodo: Boolean\n    ){\n        createTodo(\n            title: $title\n            description: $description\n            priority: $priority\n            privateTodo: $privateTodo\n        ){\n            title,\n            id,\n            description,\n            completed,\n            createdAt,\n            priority,\n            modifiedAt,\n            username,\n            privateTodo\n        }\n    }`;\n","import React, {useState} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport CreateUpdateForm from \"../CreateUpdateForm\";\n\nexport default function EditTodoDialog({id, todo: {title, description, privateTodo, priority}, refetch}) {\n    const [open, setOpen] = useState(false);\n    const initialState = {\n        todoId: id,\n        title,\n        description,\n        privateTodo,\n        priority\n    };\n    function handleClickOpen() {\n        setOpen(true);\n    }\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <>\n            <IconButton aria-label=\"Delete\" style={{marginRight: 10}} onClick={handleClickOpen}>\n                <Icon>edit_icon</Icon>\n            </IconButton>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n                maxWidth=\"sm\"\n                fullWidth={true}\n            >\n                <DialogTitle id=\"form-dialog-title\">Update Todo</DialogTitle>\n                <DialogContent>\n                    <CreateUpdateForm\n                        query='UPDATE'\n                        name={false}\n                        initialState={initialState}\n                        close={handleClose}\n                        refetch={refetch}\n                    />\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport DeleteButton from './TodoOptions/DeleteButton';\nimport ToggleCompleteBtn from './TodoOptions/ToggleCompleteBtn';\nimport EditTodoDialog from \"./TodoOptions/EditTodoDialog\";\n\nfunction OwnerOptions({todo, refetch}) {\n    const {completed, id} = todo;\n    const toggleOptions = {\n      completed,\n      id\n    };\n    return (\n        <Grid container item justify=\"flex-start\" alignItems=\"center\" xs={12}>\n            <DeleteButton id={id}/>\n            <EditTodoDialog id={id} todo={todo} refetch={refetch}/>\n            <ToggleCompleteBtn options={toggleOptions} refetch={refetch}/>\n        </Grid>\n    )\n}\n\nexport default OwnerOptions;","import React, {useContext} from 'react';\nimport moment from 'moment';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Container from '@material-ui/core/Container';\n\nimport {AuthContext} from \"../context/auth\";\nimport OwnerOptions from \"./OwnerOptions\";\n\n/**\n * @return {boolean}\n */\nfunction TodoItem({todo, refetch}) {\n    const {user} = useContext(AuthContext);\n    const {\n        description,\n        title,\n        completed,\n        createdAt,\n        modifiedAt,\n        username,\n        priority,\n        privateTodo\n    } = todo;\n    return (!privateTodo || (user && privateTodo && username === user.username)) ? (\n        <Container maxWidth=\"md\">\n            <Card style={{margin: '25px 0'}}>\n                <CardActionArea>\n                    <CardContent>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            Created by: {username}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" gutterBottom color=\"textSecondary\" component=\"p\">\n                            {moment(createdAt).fromNow()}\n                        </Typography>\n                        {modifiedAt !== createdAt ?\n                            <Typography variant=\"subtitle1\" gutterBottom color=\"textSecondary\" component=\"p\">\n                                Modified at: {moment(modifiedAt).fromNow()}\n                            </Typography> : false}\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                            {description ? ' Description: ' + description : 'No description'}\n                        </Typography>\n                        <Typography>\n                            Status: {completed ? <span style={{color: 'green'}}>Completed</span> :\n                            <span style={{color: 'red'}}>Incompleted</span>}\n                        </Typography>\n                        <Typography>\n                            Priority: <span style={{\n                            color: priority === 'Low' ? 'green'\n                                : priority === 'Medium' ? 'orange' : 'red'\n                        }}>{priority}</span>\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                {user && user.username === username ? (\n                    <CardActions>\n                        <OwnerOptions todo={todo} refetch={refetch}/>\n                    </CardActions>\n                ) : false}\n            </Card>\n        </Container>) : false;\n\n}\n\nexport default TodoItem;\n","import React, {useContext} from 'react';\nimport Paper from '@material-ui/core/Paper';\n\nimport {AuthContext} from \"../context/auth\";\nimport CreateUpdateForm from \"./CreateUpdateForm\";\n\n/**\n * @return {boolean}\n */\nfunction CreateTodo() {\n    const {user} = useContext(AuthContext);\n    const initialState = {\n        title: '',\n        description: '',\n        privateTodo: false,\n        priority: 'Low'\n    };\n    return user ? (\n        <Paper style={{margin: 25, padding: 25}}>\n            <CreateUpdateForm query='CREATE' name='Create Todo' initialState={initialState}/>\n        </Paper>\n    ) : false;\n}\n\n\nexport default CreateTodo;","import React from 'react';\nimport {useQuery} from \"@apollo/react-hooks\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Typography from '@material-ui/core/Typography';\n\nimport {FETCH_TODOS_QUERY} from \"../util/graphql\";\nimport TodoItem from \"./TodoItem\";\nimport CreateTodo from \"./CreateTodo\";\n\nfunction TodoList() {\n    const {loading, data, refetch, error} = useQuery(FETCH_TODOS_QUERY);\n    let todos;\n    if (!error) {\n        todos = data.getTodos;\n    }\n    return (\n        <Card style={{width: '100%', maxWidth: 1000, margin: 20}}>\n            <CreateTodo/>\n            <CardHeader\n                title=\"Recent todos\"\n                style={{textAlign: 'center'}}\n                className=\"title-todos\"\n            />\n            {loading || error ? (\n                <>\n                    <LinearProgress/>\n                    {error ? <Typography\n                        variant=\"h4\"\n                        component=\"h2\"\n                        style={{textAlign: 'center'}}\n                    >\n                        {error.message}\n                    </Typography> : false}\n                </>\n            ) : (<>\n                    {todos && todos.map(todo => (\n                        <div key={todo.id}>\n                            <TodoItem todo={todo} refetch={refetch}/>\n                        </div>\n                    ))}\n                </>\n            )}\n        </Card>\n    )\n}\n\n\nexport default TodoList;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport TodoList from \"../components/TodoList\";\n\nfunction Home() {\n    return (\n        <Grid container item justify=\"center\" alignItems=\"center\" xs={12}>\n            <TodoList/>\n        </Grid>\n    )\n}\n\nexport default Home;","import React, {useContext, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {AuthContext} from \"../context/auth\";\nimport {useForm} from \"../util/hooks\";\n\nfunction Login(props) {\n    const context = useContext(AuthContext);\n    const [errors, setErrors] = useState({});\n    const [connectionError, setConnectionError] = useState('');\n    const [open, setOpen] = useState(false);\n    const {onChange, onSubmit, values} = useForm(loginUserCallback, {\n        username: '',\n        password: ''\n    });\n\n    const [loginUser, {loading}] = useMutation(LOGIN_USER, {\n        update(_, {data: {login: userData}}) {\n            context.login(userData);\n            props.history.push('/');\n        },\n        onError(err) {\n            if (err.graphQLErrors[0]) {\n                setErrors(err.graphQLErrors[0].extensions.exception.errors);\n            }\n            else{\n                setConnectionError(err.message);\n                setOpen(true);\n            }\n        },\n        variables: values\n    });\n\n    function loginUserCallback() {\n        return loginUser();\n    }\n    return (\n        <Grid container item justify=\"center\" alignItems=\"center\" xs={12}>\n            <Card style={{margin: 25, width: '100%', maxWidth: '500px'}}>\n                <CardContent>\n                    <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n                        Sign in\n                    </Typography>\n                    <form onSubmit={onSubmit} className=\"form-layout\">\n                        <FormControl\n                            error={!!(errors.username || errors.general)}\n                            style={{width: '100%'}}\n                        >\n                            <InputLabel htmlFor=\"component-error\">Username</InputLabel>\n                            <Input\n                                name=\"username\"\n                                value={values.username}\n                                onChange={onChange}\n                                type=\"text\"\n                                placeholder=\"Username...\"\n                            />\n                            <FormHelperText>{errors.username || errors.general}</FormHelperText>\n                        </FormControl>\n                        <FormControl\n                            error={!!(errors.password || errors.general)}\n                            style={{width: '100%', margin: '10px 0'}}\n                        >\n                            <InputLabel htmlFor=\"component-error\">Password</InputLabel>\n                            <Input\n                                name=\"password\"\n                                value={values.password}\n                                onChange={onChange}\n                                type=\"password\"\n                                placeholder=\"Password...\"\n                            />\n                            <FormHelperText>{errors.password}</FormHelperText>\n                        </FormControl>\n                        <div style={{position: 'relative'}}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{margin: 8}}\n                                type=\"submit\"\n                                disabled={loading}\n                            >\n                                Log in\n                                {loading ?\n                                    <CircularProgress size={24}\n                                                      style={{\n                                                          color: 'green',\n                                                          position: 'absolute',\n                                                          top: '50%',\n                                                          marginTop: -12,\n                                                          marginBottom: -12\n                                                      }}\n                                    /> : false}\n                            </Button>\n                            <Snackbar\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                }}\n                                open={open}\n                                autoHideDuration={6000}\n                                onClose={() => setOpen(false)}\n                                message={<span>{connectionError}</span>}\n                            />\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Grid>\n    )\n}\n\nconst LOGIN_USER = gql`\n    mutation login(\n        $username: String!\n        $password: String!\n    ){\n        login(\n            username: $username,\n            password: $password\n        ){\n            id email username createdAt token\n        }\n    }`;\n\nexport default Login;","import React, {useContext, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport {AuthContext} from \"../context/auth\";\nimport {useForm} from \"../util/hooks\";\n\nfunction Register(props) {\n    const context = useContext(AuthContext);\n    const [errors, setErrors] = useState({});\n    const [connectionError, setConnectionError] = useState('');\n    const [open, setOpen] = useState(false);\n\n    const {onChange, onSubmit, values} = useForm(registerUser, {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [addUser, {loading}] = useMutation(REGISTER_USER, {\n        update(_, {data: {register: userData}}) {\n            context.login(userData);\n            props.history.push('/');\n        },\n        onError(err) {\n            if (!err.message) {\n                setErrors(err.graphQLErrors[0].extensions.exception.errors);\n            } else {\n                setConnectionError(err.message);\n                setOpen(true);\n            }\n        },\n        variables: values\n    });\n\n    function registerUser() {\n        return addUser();\n    }\n\n    return (\n        <Grid container item justify=\"center\" alignItems=\"center\" xs={12}>\n            <Card style={{margin: 25, width: '100%', maxWidth: '500px'}}>\n                <CardContent>\n                    <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n                        Register\n                    </Typography>\n                    <form onSubmit={onSubmit} className=\"form-layout\">\n                        <FormControl\n                            error={!!(errors.username || errors.general)}\n                            style={{width: '100%'}}\n                        >\n                            <InputLabel htmlFor=\"component-error\">Username</InputLabel>\n                            <Input\n                                name=\"username\"\n                                value={values.username}\n                                onChange={onChange}\n                                type=\"text\"\n                                placeholder=\"Username...\"\n                            />\n                            <FormHelperText>{errors.username || errors.general}</FormHelperText>\n                        </FormControl>\n                        <FormControl\n                            error={!!(errors.email || errors.general)}\n                            style={{width: '100%'}}\n                        >\n                            <InputLabel htmlFor=\"component-error\">Email</InputLabel>\n                            <Input\n                                name=\"email\"\n                                value={values.email}\n                                onChange={onChange}\n                                type=\"email\"\n                                placeholder=\"Email...\"\n                            />\n                            <FormHelperText>{errors.email}</FormHelperText>\n                        </FormControl>\n                        <FormControl\n                            error={!!(errors.password || errors.general)}\n                            style={{width: '100%', margin: '10px 0'}}\n                        >\n                            <InputLabel htmlFor=\"component-error\">Password</InputLabel>\n                            <Input\n                                name=\"password\"\n                                value={values.password}\n                                onChange={onChange}\n                                type=\"password\"\n                                placeholder=\"Password...\"\n                            />\n                            <FormHelperText>{errors.password}</FormHelperText>\n                        </FormControl>\n                        <FormControl\n                            error={!!(errors.confirmPassword || errors.general)}\n                            style={{width: '100%', margin: '10px 0'}}\n                        >\n                            <InputLabel htmlFor=\"component-error\">Confirm Password</InputLabel>\n                            <Input\n                                name=\"confirmPassword\"\n                                value={values.confirmPassword}\n                                onChange={onChange}\n                                type=\"password\"\n                                placeholder=\"Confirm password...\"\n                            />\n                            <FormHelperText>{errors.confirmPassword}</FormHelperText>\n                        </FormControl>\n                        <div style={{position: 'relative'}}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{margin: 8}}\n                                type=\"submit\"\n                                disabled={loading}\n                            >\n                                Register\n                                {loading ?\n                                    <CircularProgress size={24}\n                                                      style={{\n                                                          color: 'green',\n                                                          position: 'absolute',\n                                                          top: '50%',\n                                                          marginTop: -12,\n                                                          marginBottom: -12\n                                                      }}\n                                    /> : false}\n                            </Button>\n                            <Snackbar\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                }}\n                                open={open}\n                                autoHideDuration={6000}\n                                onClose={() => setOpen(false)}\n                                message={<span>{connectionError}</span>}\n                            />\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Grid>\n    )\n}\n\nconst REGISTER_USER = gql`\n    mutation register(\n        $username: String!\n        $email: String!\n        $password: String!\n        $confirmPassword: String!\n    ){\n        register(\n            registerInput: {\n                username: $username,\n                email: $email,\n                password: $password,\n                confirmPassword: $confirmPassword\n            }\n        ){\n            id email username createdAt token\n        }\n    }`;\n\nexport default Register;","import React, {useContext, useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport {AuthContext} from \"../context/auth\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nfunction NavBar() {\n    const classes = useStyles();\n    const {user, logout} = useContext(AuthContext);\n    const pathName = window.location.pathname;\n    const path = pathName === '/' ? 'home' : pathName.substr(1);\n    const [activeItem, setActiveItem] = useState(path);\n    const handleItemClick = (name) => setActiveItem(name);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    function phoneMenuClick(item) {\n        if (item === 'logout') {\n            handleItemClick(item);\n            handleClose();\n        } else {\n            logout();\n            handleClose();\n        }\n    }\n\n    const onSmallScreenOptions = (\n        <div className=\"phone-menu\">\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\"\n                        onClick={handleClick}>\n                <MenuIcon/>\n            </IconButton>\n            {!user ?\n                <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={() => phoneMenuClick('login')}\n                              component={Link}\n                              to=\"/login\">Login</MenuItem>\n                    <MenuItem onClick={() => phoneMenuClick('register')}\n                              component={Link}\n                              to=\"/register\"\n                    >Register</MenuItem>\n                </Menu> : <Menu\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={() => phoneMenuClick('logout')}>Logout</MenuItem>\n                </Menu>\n            }\n        </div>);\n    const children = !user ? (\n        <div>\n            <div className=\"normal-btns\">\n                <Button\n                    variant={activeItem === 'login' ? 'outlined' : 'text'}\n                    onClick={() => handleItemClick('login')}\n                    component={Link}\n                    to=\"/login\"\n                    color=\"inherit\">Login\n                </Button>\n                <Button\n                    variant={activeItem === 'register' ? 'outlined' : 'text'}\n                    onClick={() => handleItemClick('register')}\n                    component={Link}\n                    to=\"/register\"\n                    color=\"inherit\">Register\n                </Button>\n            </div>\n            {onSmallScreenOptions}\n        </div>) : (\n        <div>\n            <div className=\"normal-btns\">\n                <Button\n                    onClick={logout}\n                    color=\"inherit\">Logout\n                </Button>\n            </div>\n            {onSmallScreenOptions}\n        </div>);\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography\n                        onClick={() => handleItemClick('home')}\n                        component={Link} to=\"/\"\n                        variant=\"h6\"\n                        className={classes.title}>\n                        MERNG Todo App\n                    </Typography>\n                    {children}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nimport './App.css';\n\nimport AuthRoute from \"./util/AuthRoute\";\nimport {AuthProvider} from \"./context/auth\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport NavBar from \"./components/NavBar\"\n\n\nfunction App() {\n    return (\n        <AuthProvider>\n            <BrowserRouter>\n                <NavBar/>\n                <Route exact path=\"/\" component={Home}/>\n                <AuthRoute exact path=\"/login\" component={Login}/>\n                <AuthRoute exact path=\"/register\" component={Register}/>\n            </BrowserRouter>\n        </AuthProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ApolloClient from 'apollo-client';\nimport {InMemoryCache} from \"apollo-cache-inmemory\";\nimport {createHttpLink} from \"apollo-link-http\";\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {setContext} from 'apollo-link-context';\n\nimport App from './App';\n\nconst httpLink = createHttpLink({\n    uri: 'http://localhost:5000'\n});\n\nconst authLink = setContext(() => {\n    const token = localStorage.getItem('jwtToken');\n    return {\n        headers: {\n            Authorization: token ? `Bearer ${token}` : ''\n        }\n    }\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n});\n\nexport default (\n    <ApolloProvider client={client}>\n        <App/>\n    </ApolloProvider>\n)","import ReactDOM from 'react-dom';\nimport ApolloProvider from './ApolloProvider';\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\n"],"sourceRoot":""}